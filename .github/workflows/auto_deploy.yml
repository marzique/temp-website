name: Temp Run Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: master
    
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev postgresql postgresql-contrib
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run migrations for tests
      run: python manage.py migrate
      
    - name: Run tests
      run: python manage.py test
     
    - name: Deploy to prod
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: |
          cd /home/temp-website &&
          source tempfcenv/bin/activate && 
          git pull --rebase https://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@github.com/marzique/temp-website.git master &&
          pip install -r requirements.txt &&
          python manage.py migrate &&
          python manage.py collectstatic --noinput &&
          systemctl restart tempfc
        host: ${{ secrets.REMOTE_HOST }}
        username: root
        passphrase: ${{ secrets.PASSPHRASE }}
        privateKey: ${{ secrets.PRIVATE_KEY}}

    # tariq's telegram notification
    - name: Send notifications
      uses: yanzay/notify-telegram@v0.1.0
      if: always()
      with:
        chat: ${{ secrets.CHAT }} # user id or channel name secret
        token: ${{ secrets.TOKEN }} # token secret
        status: ${{ job.status }}

    # new style notificaiton
    # SUCCESS
    - name: send default message
      uses: appleboy/telegram-action@master
      if: success()
      with:
        to: ${{ secrets.CHAT  }}
        token: ${{ secrets.TOKEN }}

    # FAIL
    - name: send photo message
      uses: appleboy/telegram-action@master
      if: failure()
      with:
        to: ${{ secrets.CHAT  }}
        token: ${{ secrets.TOKEN }}
        message: |
          Щось наєбнулось
          Хто: ${{ github.actor }}
          За шо: ${{ github.event_name }}

        message: Шось наєбнулось
        photo: https://media.datacenterdynamics.com/media/images/Failed-ThinkstockPhotos-Aquir.width-358.jpg
