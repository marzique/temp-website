name: Temp Run Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: master
    
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev postgresql postgresql-contrib

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt-get install redis-server
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        touch .env
        pwd
        ls -la
        echo DEBUG=True >> .env
        echo SECRET_KEY=testkeydontcare >> .env
        echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' >> .env
        echo EMAIL_USE_TLS=True >> .env
        echo EMAIL_HOST=smtp.gmail.com >> .env
        echo EMAIL_PORT=587 >> .env 
        echo EMAIL_HOST_USER=asdasdasd@gmail.com >> .env 
        echo EMAIL_HOST_PASSWORD=asdasdasd >> .env
        echo DEFAULT_FROM_EMAIL=noreply@tempfc.club >> .env
        echo EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend >> .env
        echo SERVER_EMAIL=errors@tempfc.club >> .env
        echo TELEGRAM_BOT_TOKEN='${{ secrets.TOKEN }}' >> .env
        cat .env
        
    - name: Run migrations for tests
      run: python manage.py migrate
      
    - name: Run tests
      run: python manage.py test
     
    - name: Deploy to prod
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: |
          cd /home/temp-website &&
          source tempfcenv/bin/activate && 
          git pull --rebase https://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@github.com/marzique/temp-website.git master &&
          pip install -r requirements.txt &&
          python manage.py migrate &&
          python manage.py collectstatic --noinput &&
          sudo systemctl daemon-reload &&
          systemctl restart tempfc
        host: ${{ secrets.REMOTE_HOST }}
        username: root
        passphrase: ${{ secrets.PASSPHRASE }}
        privateKey: ${{ secrets.PRIVATE_KEY }}

    # SUCCESS MESSAGE
    - name: send success message
      uses: appleboy/telegram-action@master
      if: success()
      with:
        to: ${{ secrets.CHAT  }}
        token: ${{ secrets.TOKEN }}
        message: |
          ‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∑–∞–ª–∏–≤–∫–∞ –≤ –ø—Ä–æ–¥. 
          –ê–≤—Ç–æ—Ä: ${{ github.actor }}, 
          –ö–æ–º–º–∏—Ç: ${{ github.event.head_commit.message }} 

    # FAILURE MESSAGE
    - name: send failure message
      uses: appleboy/telegram-action@master
      if: failure()
      with:
        to: ${{ secrets.CHAT  }}
        token: ${{ secrets.TOKEN }}
        message: |
          ‚ùå –ß—Ç–æ —Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å ‚ùå
          –ê–≤—Ç–æ—Ä: ${{ github.actor }}
          –ì–æ–≤–Ω–æ–∫–æ–¥: ${{ github.event.head_commit.message }} üí©üí©üí©
